# SPDX-License-Identifier: GPL-3.0-only
name: Build

env:
  KERNEL_GITHUB_REPOSITORY: "msm8939-mainline/msm8916-mainline-linux"
  KERNEL_NAME: mainline-ferrari
  KBUILD_DEFCONFIG: msm8939_defconfig
  KBUILD_DEFCONFIG_PMOS: pmosferrari.config
  CROSS_COMPILE: aarch64-linux-gnu- # build for aarch64
  ARCH_SPEC_PKGS: crossbuild-essential-arm64
  ARCH: arm64 # build for aarch64

on:
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        kernel: [v5.9-rc1-ferrari]
    runs-on: ubuntu-latest
    env:
      TUXMAKE_EXTRA_OPTS: "--kconfig-add CONFIG_GENERIC_IRQ_DEBUGFS=y" # for debugging, set what you need
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ matrix.kernel }}
          path: linux
      - name: Build
        run: |
          export BRANCH=${{ matrix.kernel }}
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user tuxmake
          tuxmake --directory linux --build-dir=cache/ --target-arch=aarch64 -k $KBUILD_DEFCONFIG  --kconfig-add $KBUILD_DEFCONFIG_PMOS $TUXMAKE_EXTRA_OPTS
          cd /home/runner/.cache/tuxmake/builds/1/
          tar -cf linux-${BRANCH}.tar *
          cd -
          mv /home/runner/.cache/tuxmake/builds/1/linux-${BRANCH}.tar ./

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ matrix.kernel }}"
          prerelease: true
          title: "Build ${{ matrix.kernel }}"
          files: |
            *.tar
  dtbs:
    strategy:
      fail-fast: false
      matrix:
        kernel: [v5.9-rc1-ferrari]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ matrix.kernel }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          cd linux
          make defconfig
          status=0
          make -j3 dtbs || status=1
          make -j3 dtbs_check || status=1
          exit $status

  dt_bindings_check:
    strategy:
      fail-fast: false
      matrix:
        kernel: [v5.9-rc1-ferrari]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ matrix.kernel }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          cd linux
          make -j3 dt_binding_check
