# SPDX-License-Identifier: GPL-3.0-only
name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        kernel: [v4.14, v4.19, v5.4, v5.10, next]
    runs-on: ubuntu-latest
    env:
      BRANCH: qcom-apq8064-${{ matrix.kernel }}
      KBUILD_DEFCONFIG: qcom_apq8064_defconfig
      TUXMAKE_EXTRA_OPTS: "--kconfig-add CONFIG_GENERIC_IRQ_DEBUGFS=y" # for debugging, set what you need
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "okias/linux"
          ref: ${{ env.BRANCH }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 git build-essential binutils-multiarch crossbuild-essential-armhf device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user tuxmake
          dash ./build.sh
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.BRANCH }}"
          prerelease: true
          title: "Build ${{ env.BRANCH }}"
          files: |
            *.tar
  dtbs:
    strategy:
      fail-fast: false
      matrix:
        kernel: [next]
    runs-on: ubuntu-latest
    env:
      BRANCH: qcom-apq8064-${{ matrix.kernel }}
      KBUILD_DEFCONFIG: qcom_apq8064_defconfig
      CROSS_COMPILE: arm-linux-gnueabihf- # build for armv7
      ARCH: arm # build for armv7
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "okias/linux"
          ref: ${{ env.BRANCH }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 libyaml-dev git build-essential binutils-multiarch crossbuild-essential-armhf device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          dash ./dtb_check.sh
